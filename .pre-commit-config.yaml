repos:
#   -   repo: https://github.com/lorenzwalthert/precommit
#       rev: v0.4.3
#       hooks:
#       -   id: lintr
#           args: [--warn_only, --key=value]

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: check-added-large-files
        name: Check for files larger than 5 MB
        args: [ "--maxkb=5120" ]
        exclude: ^docs/user_guide/user_documentation\.md$
      - id: end-of-file-fixer
        name: Check for a blank line at the end of scripts (auto-fixes)
        exclude: '\.Rd|^docs/user_guide/user_documentation\.md$'
      - id: trailing-whitespace
        name: Check for trailing whitespaces (auto-fixes)
        exclude: ^docs/user_guide/user_documentation\.md$

  - repo: https://github.com/kynan/nbstripout
    rev: 0.7.1
    hooks:
      - id: nbstripout
        name: nbstripout - Strip outputs from notebooks (auto-fixes)
        args:
          - --extra-keys
          - "metadata.colab metadata.kernelspec cell.metadata.colab cell.metadata.executionInfo cell.metadata.id cell.metadata.outputId"
        exclude: ^docs/user_guide/user_documentation\.md$

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        name: isort - Sort python imports (auto-fixes)
        args: [ "--profile", "black", "--filter-files" ]
      - id: isort
        name: isort - Sort cython imports (auto-fixes)
        types: [cython]
        args: [ "--profile", "black", "--filter-files" ]
      - id: isort
        name: isort - Sort pyi imports (auto-fixes)
        types: [pyi]
        args: [ "--profile", "black", "--filter-files" ]

  - repo: https://github.com/psf/black
    rev: 24.8.0 # Replace by any tag/version: https://github.com/psf/black/tags
    hooks:
      - id: black
        args: ['--line-length=100']  # Optional if you have configured pyproject.toml
        name: black - consistent Python code formatting (auto-fixes)
        language_version: python # Should be a command that runs python3.6+
        exclude: ^(tests/|notebooks/)|^docs/user_guide/user_documentation\.md$

  - repo: https://github.com/PyCQA/flake8
    rev: 7.1.1
    hooks:
      - id: flake8
        name: flake8 - Python linting
        exclude: ^tests/|^docs/user_guide/user_documentation\.md$

  - repo: https://github.com/nbQA-dev/nbQA
    rev: 1.8.7
    hooks:
      - id: nbqa-isort
        name: nbqa-isort - Sort Python imports (notebooks; auto-fixes)
        additional_dependencies: [ isort==5.8.0 ]
        exclude: ^docs/user_guide/user_documentation\.md$
      - id: nbqa-black
        name: nbqa-black - consistent Python code formatting (notebooks; auto-fixes)
        additional_dependencies: [ black==21.5b2 ]
        exclude: ^docs/user_guide/user_documentation\.md$

  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        name: detect-secrets - Detect secrets in staged code
        args: [ "--baseline", ".secrets.baseline" ]
        exclude: .*/tests/.*|^\.cruft\.json$|^docs/user_guide/user_documentation\.md$

  - repo: https://github.com/PyCQA/bandit
    rev: '1.7.9'
    hooks:
      - id: bandit
        name: bandit - Checks for vulnerabilities
        args: ["-c", "pyproject.toml"]
        additional_dependencies: ["bandit[toml]"]
        exclude: ^docs/user_guide/user_documentation\.md$
